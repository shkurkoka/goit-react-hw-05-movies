{"version":3,"file":"static/js/831.c435cb0e.chunk.js","mappings":"gNA+CA,UA5CgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA0BR,OAxBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAO,mCAAG,+FACNC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,+NALX,kBAUeC,MAAM,sCAAD,OAAuCT,EAAvC,kCAAgFI,GAVpG,cAUFM,EAVE,gBAWWA,EAASC,OAXpB,OAWFC,EAXE,OAYRb,EAAWa,GACXC,QAAQC,IAAIF,GAbJ,kDAeRC,QAAQE,MAAR,MAfQ,0DAAH,qDAmBbZ,GACH,GAAE,CAACH,KAIA,8BACI,wBACKF,EAAQkB,SAAWlB,EAAQkB,QAAQC,KAAI,SAACC,GACrC,OAAO,2BACH,qCAAaA,EAAOC,WACpB,6BACID,EAAOE,QAAUF,EAAOE,QAAU,iDAH1BF,EAAOG,WAM1B,OAIhB,C,sBC7CD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOhB,GAEP,YADAU,EAAOV,EAET,CAEIe,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/pages/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { useParams} from 'react-router-dom';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const Reviews = async () => {\n            const options = {\n                method: 'GET',\n                headers: {\n                    accept: 'application/json',\n                    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZDVkNWI0NDRjNmE4OGRjMzhjNzFjNDk4NjkwOGJmOCIsInN1YiI6IjY0ZDRhMTUwZDEwMGI2MDBjNWNmYTc1MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.oN_XdkYxFImA0SoU4WlFVfk3cEJmjoUrVEqps9KaPM0'\n                }\n            };\n\n            try {\n                const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`, options);\n                const data = await response.json();\n                setReviews(data);\n                console.log(data);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n\n        Reviews();\n    }, [movieId]);\n\n\n    return (\n        <section>\n            <ul>\n                {reviews.results && reviews.results.map((review) => {\n                    return <li key={review.created_at}>\n                        <h4>Author: {review.author}</h4>\n                        <p> {\n                            review.content ? review.content : \"We don't have any reviews for this movie.\"\n                        }</p>\n                    </li>\n                })}\n            </ul>\n        </section>\n    );\n}\n\nexport default Reviews;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","Reviews","options","method","headers","accept","Authorization","fetch","response","json","data","console","log","error","results","map","review","author","content","created_at","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}