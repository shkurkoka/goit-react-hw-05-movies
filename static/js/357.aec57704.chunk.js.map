{"version":3,"file":"static/js/357.aec57704.chunk.js","mappings":"gNA8CA,UA3Ca,WACT,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA0BR,OAxBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAI,mCAAG,+FACHC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,+NALd,kBAUkBC,MAAM,sCAAD,OAAuCT,EAAvC,2BAAyEI,GAVhG,cAUCM,EAVD,gBAWcA,EAASC,OAXvB,OAWCC,EAXD,OAYLb,EAAQa,EAAKd,MAZR,kDAeLe,QAAQC,MAAR,MAfK,0DAAH,qDAmBVX,GACH,GAAE,CAACH,KAIA,8BACI,wBACKF,EAAKiB,KAAI,SAACC,GACP,OAAO,2BAEH,uBAAIA,EAAKC,QACT,uCAAeD,EAAKE,eAHRF,EAAKG,GAKxB,OAIhB,C,sBC5CD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOf,GAEP,YADAS,EAAOT,EAET,CAEIc,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/pages/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { useParams} from 'react-router-dom';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const Cast = async () => {\n            const options = {\n                method: 'GET',\n                headers: {\n                    accept: 'application/json',\n                    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZDVkNWI0NDRjNmE4OGRjMzhjNzFjNDk4NjkwOGJmOCIsInN1YiI6IjY0ZDRhMTUwZDEwMGI2MDBjNWNmYTc1MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.oN_XdkYxFImA0SoU4WlFVfk3cEJmjoUrVEqps9KaPM0'\n                }\n            };\n\n            try {\n                const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`, options);\n                const data = await response.json();\n                setCast(data.cast);\n                // console.log(data.cast);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n\n        Cast();\n    }, [movieId]);\n\n\n    return (\n        <section>\n            <ul>\n                {cast.map((char) => {\n                    return <li key={char.id}>\n                        {/* <img src={`https://image.tmdb.org/t/p/${char.profile_path}`} alt=\"Ups, something is wrong\" /> */}\n                        <p>{char.name}</p>\n                        <p>Character: {char.character}</p>\n                    </li>\n                })}\n            </ul>\n        </section>\n    );\n}\n\nexport default Cast;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","cast","setCast","movieId","useParams","useEffect","Cast","options","method","headers","accept","Authorization","fetch","response","json","data","console","error","map","char","name","character","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}